# gpu-monitoring-values.yaml
global:
  imageRegistry: "172.16.109.168:8082/egs"
  imagePullSecrets:
  - nexus-registry-secret
prometheus-node-exporter:
  service:
    # This changes the port the container listens on
    port: 19100
    # This changes the port mapped on the node's network interface
    hostPort: 19100
    targetPort: 19100

prometheusOperator:
  prometheusConfigReloader:
    image:
      registry: "172.16.109.168:8082/egs"
      repository: prometheus-operator/prometheus-config-reloader
      # if not set appVersion field from 
      tag: "v0.80.0"


prometheus:
  prometheusSpec:
    storageSpec: 
        volumeClaimTemplate:
          spec:  
            storageClassName: nutanix-volume # <-- REPLACE THIS
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi # Placeholder for storage configuration
    livenessProbe:
      initialDelaySeconds: 120  # Wait 2 minutes before the first check
      timeoutSeconds: 10        # Give the probe 10 seconds to respond
      periodSeconds: 15         # Check every 15 seconds
      failureThreshold: 10      # Allow 10 failures before restarting
    readinessProbe:
      initialDelaySeconds: 120  # Wait 2 minutes before marking as ready
      timeoutSeconds: 10        # Give the probe 10 seconds to respond
      periodSeconds: 15         # Check every 15 seconds
      failureThreshold: 10      # Allow 10 failures before marking as unready

# Configuration for the Alertmanager pods
alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: nutanix-volume # Use the StorageClass from your cluster
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi # Adjust size if needed
    livenessProbe:
      initialDelaySeconds: 120  # Wait 2 minutes before the first check
      timeoutSeconds: 10        # Give the probe 10 seconds to respond
      periodSeconds: 15         # Check every 15 seconds
      failureThreshold: 10      # Allow 10 failures before restarting
    readinessProbe:
      initialDelaySeconds: 120  # Wait 2 minutes before marking as ready
      timeoutSeconds: 10        # Give the probe 10 seconds to respond
      periodSeconds: 15         # Check every 15 seconds
      failureThreshold: 10      # Allow 10 failures before marking as unready

inline_values:
  prometheus:
    service:
      type: ClusterIP                     # Service type for Prometheuss
    prometheusSpec:
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
      - job_name: tgi
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod_name
        - source_labels: [__meta_kubernetes_pod_container_name]
          target_label: container_name
      - job_name: gpu-metrics
        scrape_interval: 1s
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - egs-gpu-operator
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          action: drop
          regex: .*-node-feature-discovery-master
        - source_labels: [__meta_kubernetes_pod_node_name]
          action: replace
          target_label: kubernetes_node
  grafana:
    enabled: true                         # Enable Grafana
    grafana.ini:
      auth:
        disable_login_form: true
        disable_signout_menu: true
      auth.anonymous:
        enabled: true
        org_role: Viewer
    service:
      type: ClusterIP                  # Service type for Grafana
    persistence:
      enabled: false                      # Disable persistence
      size: 1Gi                           # Default persistence size