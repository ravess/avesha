# Default values for k-native.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# if you're installing in openshift cluster make this variable true
global:
  imageRegistry: 172.16.109.25/harbor/projects/3/repositories
  # Profile settings (e.g., for OpenShift)
  profile:
    openshift: false
  kubeTally:
    # Enable or disable KubeTally
    enabled: false

    postgresSecretName: kubetally-db-credentials   # Default value, secret name can be overridden

    # Ensure to configure the mandatory PostgreSQL database settings when 'kubetally enable' is true.
    postgresAddr:                         # Optional, can be specified here or retrieved from the secret
    postgresPort:                          # Optional, can be specified here or retrieved from the secret
    postgresUser:                        # Optional, can be specified here or retrieved from the secret
    postgresPassword:                     # Optional, can be specified here or retrieved from the secret
    postgresDB:                          # Optional, can be specified here or retrieved from the secret
    postgresSslmode: require

    # Service type for price Service Type
    priceServiceType: ClusterIP

    # Number of workers for the price updater
    priceUpdaterWorkers: 5

    # Prometheus URL for monitoring
    prometheusUrl: http://prometheus-service:9090

    # Data processing time window (hours ago)
    dataProcessingHoursAgo: 720

    # Schedule for the pricing updater (cron expression)
    pricingUpdaterSchedule: 0 0 1 * *
    
    # updates price for listed cloud providers
    pricingUpdaterCloudProviders: "aws,linode"

kubeslice:
  # Configuration for the RBAC proxy
  rbacproxy:
    # Image name for the RBAC proxy
    image: kubebuilder-kube-rbac-proxy
    # Image tag for the RBAC proxy
    tag: v0.18.0
    containerSecurityContext:
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true

  # Configuration for the KubeSlice controller
  controller:
    # Log level for the controller
    logLevel: info
    # Prefix for RBAC resources created by KubeSlice
    rbacResourcePrefix: kubeslice-rbac
    # Prefix for project namespaces created by KubeSlice
    projectnsPrefix: kubeslice
    # Endpoint for the controller (should be specified if needed)
    endpoint: ""
    # Image name for the KubeSlice controller
    image: kubeslice-controller-ent
    # Image tag for the KubeSlice controller
    tag: 1.16.0
    # Image pull policy for the KubeSlice controller
    pullPolicy: IfNotPresent
    # Configuration for kubeTally, which handles chargeback and metrics
    kubeTally:
      # Interval for cleaning up metrics when a worker cluster stops communicating
      metricsCleanupInterval: 15m
    # Configuration for replication using MinIO
    replication:
     # Image name for MinIO
      image: minio
     # Image tag for MinIO
      tag: RELEASE.2024-07-16T23-46-41Z
     # Configuration for MinIO
      minio:
        # Whether to install MinIO
        install: "false"
        # Storage size for MinIO
        storage: 1Gi
        # Username for MinIO
        username: minioadmin
        # Password for MinIO
        password: minioadmin
        # service options
        service:
          # minio service type
          type: "LoadBalancer"
          # minio service annotations
          annotations: {}
        labels:
          app: minio
    labels:
      control-plane: controller-manager
    annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/port: "18080"
        prometheus.io/scrape: "true"
    containerSecurityContext:
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
    podSecurityContext: 
      runAsUser: 65536               # Non-root user
      runAsGroup: 65536              # Non-root group
      runAsNonRoot: true             # Ensure the container does not run as root
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
    tolerations:
    - operator: "Exists"
    affinity: {}
        # nodeAffinity:
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #     - weight: 100
        #       preference:
        #         matchExpressions:
        #           - key: "node.kubernetes.io/gpu"
        #             operator: "DoesNotExist"
       

  # Configuration for the OpenVPN job
  ovpnJob:
    # Image name for the gateway certificates generator
    image: gateway-certs-generator
    # Image tag for the gateway certificates generator
    tag: 0.5.0
  
  # Configuration for Prometheus
  prometheus:
    # Whether Prometheus is enabled
    enabled: false 
    # URL for Prometheus service
    url: http://prometheus-service:9090

  # Configuration for events
  events:
    # Whether events are disabled
    disabled: false

  # license details by default mode set to auto and license set to trial - please give company-name or user-name as customerName
  license:
    # possible license type values ["kubeslice-trial-license"]
    type: kubeslice-trial-license
    # possible license mode - ["auto", "manual"]
    mode: auto
    # please give company-name or user-name as customerName
    customerName: ""


prometheus:
  # Secrets for image pulling
  imagePullSecrets:
  - name: "kubeslice-image-pull-secret"

  # Configuration for Prometheus config reloader
  configmapReload:
    prometheus:
      image:
        # Repository for Prometheus config reloader image
        repository: docker.io/aveshasystems/prometheus-config-reloader
        # Tag for Prometheus config reloader image
        tag: v0.75.2
        # Digest for Prometheus config reloader image (use tag if empty)
        digest: ""
        # Pull policy for Prometheus config reloader image
        pullPolicy: IfNotPresent

  # Configuration for Prometheus server
  server:
    image:
      # Repository for Prometheus server image
      repository: docker.io/aveshasystems/prometheus
      # Tag for Prometheus server image (uses appVersion from Chart.yaml if not set)
      tag: v2.53.1
      # Digest for Prometheus server image (use tag if empty)
      digest: ""
      # Pull policy for Prometheus server image
      pullPolicy: IfNotPresent

    # Service configuration for Prometheus server
    service:
      # Service type for Prometheus server
      type: ClusterIP

    # Persistent volume configuration for Prometheus server
    persistentVolume:
      # Enable/disable Persistent Volume Claim for Prometheus data
      enabled: true
      # Override name for the created PVC (empty uses stateful set name)
      statefulSetNameOverride: ""
      # Access modes for the PVC
      accessModes:
        - ReadWriteOnce
      # Labels for the PVC
      labels: { }
      # Annotations for the PVC
      annotations: { }
      # Name of existing PVC to use (create manually if set)
      existingClaim: ""
      # Mount path for Prometheus data
      mountPath: /data
      # Size of the PVC
      size: 5Gi
      # Retention period for Prometheus data
    retention: "30d"

imagePullSecretsName: "kubeslice-image-pull-secret"
# leave the below fields empty if secrets are managed externally.
imagePullSecrets:
  repository: https://index.docker.io/v1/ ## Value to be used incase using the docker hub images-  https://index.docker.io/v1/
  username:
  password:
  email:
  dockerconfigjson: ## Value to be used if using external secret managers
